[tox]
description = Default tox environments list
envlist =
    style,{py310,py311,py312,py313}{,-coverage},doc
skip_missing_interpreters = true
{%- if cookiecutter.__build_system != "setuptools" %}
isolated_build = true
{%- if cookiecutter.__build_system == "flit" %}
isolated_build_env = build
{%- endif %}
{%- endif %}

[testenv]
description = Checks for project unit tests and coverage (if desired)
basepython =
    py310: python3.10
    py311: python3.11
    py312: python3.12
    py313: python3.13
    py: python3
    {%- if cookiecutter.__build_system != "poetry" %}
    {style,reformat,doc,build}: python3
    {%- else %}
    {style,reformat,doc}: python3
    {%- endif -%}
{%- if cookiecutter.__build_system == "poetry" %}
skip_install = true
whitelist_externals =
    poetry
{%- elif cookiecutter.__build_system == "setuptools" %}
deps =
    -r{toxinidir}/requirements/requirements_tests.txt
{%- elif cookiecutter.__build_system == "flit" %}
extras =
    tests
{%- endif %}
setenv =
    PYTHONUNBUFFERED = yes
    coverage: PYTEST_EXTRA_ARGS = --cov=ansys.{{ cookiecutter.__product_name_slug }} --cov-report=term --cov-report=xml:.cov/xml --cov-report=html:.cov/html
commands =
    {%- if cookiecutter.__build_system != "poetry" %}
    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}
    {%- else -%}
    poetry install
    poetry run pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}
    {%- endif %}

[testenv:style]
description = Checks project code style
skip_install = true
deps =
    pre-commit
commands =
    pre-commit install
    pre-commit run --all-files --show-diff-on-failure

[testenv:doc]
description = Check if documentation generates properly
{%- if cookiecutter.__build_system == "setuptools" %}
deps =
    -r{toxinidir}/requirements/requirements_doc.txt
{%- elif cookiecutter.__build_system == "poetry" %}
skip_install = true
whitelist_externals =
    poetry
{%- elif cookiecutter.__build_system == "flit" %}
extras =
    doc
{%- endif %}
commands =
    {%- if cookiecutter.__build_system != "poetry" %}
    sphinx-build -d "{toxworkdir}/doc_doctree" doc/source "{toxinidir}/_build/html" --color -vW -bhtml
    {%- elif cookiecutter.__build_system == "poetry" %}
    poetry install
    poetry run sphinx-build -d "{toxworkdir}/doc_doctree" doc/source "{toxinidir}/_build/html" --color -vW -bhtml
    {%- endif %}
