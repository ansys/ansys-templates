[build-system]
{%- if cookiecutter.__build_system == "flit" %}
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"
{% elif cookiecutter.__build_system == "poetry" %}
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
{% elif cookiecutter.__build_system == "setuptools" %}
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
{% endif -%}

{%- if cookiecutter.__build_system == "flit" %}
[project]
# Check https://flit.readthedocs.io/en/latest/pyproject_toml.html for all available sections
name = "{{ cookiecutter.__pkg_name }}"
version = "{{ cookiecutter.__version }}"
description = "{{ cookiecutter.__short_description }}"
readme = "README.rst"
requires-python = ">={{ cookiecutter.__requires_python }},<4.0"
license = {file = "LICENSE"}
authors = [
    {name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"},
]
maintainers = [
    {name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"},
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = []

[project.optional-dependencies]
tests = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
]
doc = [
    "ansys-sphinx-theme==1.5.3",
    "numpydoc==1.9.0",
    "Sphinx==8.2.3",
    "sphinx-copybutton==0.5.2",
]

[tool.flit.module]
name = "{{ cookiecutter.__pkg_namespace }}"

[project.urls]
Source = "{{ cookiecutter.__repository_url }}"
Tracker = "{{ cookiecutter.__repository_url }}/issues"
Homepage = "{{ cookiecutter.__repository_url }}"
Documentation = "{{ cookiecutter.__documentation_url }}"

[tool.pydocstyle]
convention = "numpy"

{% elif cookiecutter.__build_system == "poetry"  %}
[tool.poetry]
# Check https://python-poetry.org/docs/pyproject/ for all available sections
name = "{{ cookiecutter.__pkg_name }}"
version = "{{ cookiecutter.__version }}"
description = "{{ cookiecutter.__short_description }}"
license = "MIT"
authors = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
maintainers = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
readme = "README.rst"
repository = "{{ cookiecutter.__repository_url }}"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.dependencies]
python = ">={{ cookiecutter.__requires_python }},<4.0"
importlib-metadata = {version = "^8.7.0", python = ">=3.9"}

# Optional documentation dependencies
[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
Sphinx = "^8.2.3"
numpydoc = "^1.9.0"
ansys-sphinx-theme = "^1.5.3"
sphinx-copybutton = "^0.5.2"

# Optional testing dependencies
[tool.poetry.group.tests]
optional = true
[tool.poetry.group.tests.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"

# Optional build requirements
[tool.poetry.group.build]
optional = true
[tool.poetry.group.build.dependencies]
build = "^1.2.2.post1"
twine = "^6.1.0"
{% endif %}
[tool.black]
line-length = {{ cookiecutter.__max_linelength }}

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = {{ cookiecutter.__max_linelength }}
default_section = "THIRDPARTY"
src_paths = ["doc", "src", "tests"]

[tool.pydocstyle]
convention = "numpy"

[tool.coverage.run]
source = ["{{ cookiecutter.__coverage_source }}"]

[tool.coverage.report]
show_missing = true

[tool.towncrier]
package = "{{ cookiecutter.__pkg_namespace }}"
directory = "doc/changelog.d"
filename = "doc/source/changelog.rst"
start_string = ".. towncrier release notes start\n"
template = "doc/changelog.d/changelog_template.jinja"
title_format = "`{version} <https://github.com/ansys/{{ cookiecutter.__pkg_namespace }}/releases/tag/v{version}>`_ - {project_date}"
issue_format = "`#{issue} <https://github.com/ansys/{{ cookiecutter.__pkg_namespace }}/pull/{issue}>`_"

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "dependencies"
name = "Dependencies"
showcontent = true

[[tool.towncrier.type]]
directory = "miscellaneous"
name = "Miscellaneous"
showcontent = true